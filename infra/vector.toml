# stored in /etc/vector/vector.toml
#
#                                    __   __  __
#                                    \ \ / / / /
#                                     \ V / / /
#                                      \_/  \/
#
#                                    V E C T O R
#                                   Configuration
#
# ------------------------------------------------------------------------------
# Website: https://vector.dev
# Docs: https://vector.dev/docs
# Chat: https://chat.vector.dev
# ------------------------------------------------------------------------------

# Change this to use a non-default directory for Vector data storage:
# data_dir = "/var/lib/vector"

# Random Syslog-formatted logs
[sources.journald_logs]
type = "journald"
# exclude_units = [ "ssh", "containerd" , "init.scope", "cron" , "vector"]
include_units = ["nginx", "docker"]

[transforms.filter_out_logs]
type = "filter"
inputs = ["journald_logs"]
# exclude logs from docker where there is no container aka internal logs
condition = '._SYSTEMD_UNIT != "docker.service" || .CONTAINER_NAME != null'

[transforms.journald_logs_parser]
type = "remap"
inputs = ["filter_out_logs"]
source = '''
if (._SYSTEMD_UNIT == "docker.service") {
  .app = .CONTAINER_NAME
} else {
  .app = replace!(._SYSTEMD_UNIT, ".service", "")
}

if (._SYSTEMD_UNIT == "nginx.service") {
  # avoid a dupe "recipeyak-nyc3-prod nginx: " in the logs from systemd
  prefix = string!(.host) + " " + string!(.app) + ": "
  .message = replace!(.message, prefix, "")
}
'''

[sources.pg]
type = "file"
read_from = "beginning"
include = ["/var/log/postgresql/*.json"]

[transforms.pg_json]
type = "remap"
inputs = ["pg"]
source = '''
data = parse_json!(.message)
if data == null {
  abort
}
. = merge!(., data)
.app = "postgres"
'''

[sources.vector_logs]
type = "internal_logs"

[sinks.console]
type = "console"
inputs = ["vector_logs"]
encoding.codec = "text"

[sinks.mezmo]
type = "mezmo"
inputs = [ "journald_logs_parser"]
api_key = "${LOGDNA_API_KEY}"
hostname = "${HOSTNAME}"

# Vector's GraphQL API (disabled by default)
# Uncomment to try it out with the `vector top` command or
# in your browser at http://localhost:8686
[api]
enabled = true
address = "127.0.0.1:8686"
