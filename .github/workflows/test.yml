name: Test

on:
  pull_request:

# TODO: Skip if no changes in directory
jobs:
  frontend_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version-file: "./frontend/package.json"
          cache-dependency-path: "./frontend/yarn.lock"
          cache: "yarn"
      - name: Install dependencies
        working-directory: "./frontend"
        run: yarn install --frozen-lockfile
      - name: Run tests
        working-directory: "./frontend"
        run: ./s/test --no-watch --reporter junit --outputFile ~/test-results/frontend_tests.xml
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ~/test-results
  frontend_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version-file: "./frontend/package.json"
          cache-dependency-path: "./frontend/yarn.lock"
          cache: "yarn"
      - name: Install dependencies
        working-directory: "./frontend"
        run: yarn install --frozen-lockfile
      - name: Run linter
        working-directory: "./frontend"
        run: |
          ./s/lint
          ./s/build
      - name: Move artifacts
        working-directory: "./frontend"
        run: |
          mkdir -p /tmp/frontend-artifacts
          cp -R stats.html /tmp/frontend-artifacts
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: frontend-artifacts
          path: /tmp/frontend-artifacts
  docker_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
      - name: Install dependencies
        run: |
          curl -L https://github.com/hadolint/hadolint/releases/download/v1.17.1/hadolint-Linux-x86_64 -o hadolint
          chmod +x hadolint
          mv hadolint /bin/
      - name: Run linter
        run: find . -name '*.Dockerfile' | xargs hadolint

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
      - name: Install dependencies
        run: |
          apt-get update -yq && \
          apt-get install -y git shellcheck
      - name: Run shellcheck
        run: ./s/shellcheck

  build_api_container:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        run: |
          docker build -f django.Dockerfile \
          --tag recipeyak/django:$GITHUB_SHA \
          --build-arg GIT_SHA=$GITHUB_SHA .
          docker push recipeyak/django:$GITHUB_SHA
