name: Infrastructure

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      commit_sha:
        description: "SHA to deploy"
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: false

# TODO: Skip if no changes in directory
jobs:
  lint_docker:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Run linter
        uses: jbergstroem/hadolint-gh-action@83e551589b57fb5bc5ad415fbcde93da0d2641a1
        with:
          dockerfile: "**/*.Dockerfile"

  lint_shell:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Install dependencies
        run: |
          sudo apt install shellcheck
      - name: Run shellcheck
        run: ./s/shellcheck

  build_api_container:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:backend"
          push: true
          file: "django.Dockerfile"
          tags: recipeyak/django:${{ github.event.pull_request.head.sha || github.sha }}
          cache-from: type=gha,scope=django
          cache-to: type=gha,scope=django,mode=max
          build-args: |
            GIT_SHA=${{ github.event.pull_request.head.sha || github.sha }}

  build_ui_container:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version-file: "frontend/package.json"
          cache-dependency-path: "frontend/yarn.lock"
          cache: "yarn"
      - name: Install dependencies
        working-directory: "frontend"
        run: yarn install --frozen-lockfile
      - name: Build
        env:
          FRONTEND_GIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
        working-directory: "frontend"
        run: |
          export API_GIT_TREE_SHA=$(git rev-parse HEAD:backend)
          s/build
      - name: Build and push
        working-directory: "./frontend"
        run: |
          git_sha=${{ github.event.pull_request.head.sha || github.sha }}
          docker buildx build --push -f react.Dockerfile \
          --tag recipeyak/react:$git_sha .
          echo "Pushed \`recipeyak/react:$git_sha\`" >> $GITHUB_STEP_SUMMARY

  deploy:
    needs: [build_api_container, build_ui_container]
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock

      GIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
    steps:
      - uses: actions/checkout@v3
      - name: "SSH to server and deploy"
        run: ./infra/ssh-to-server

  deploy_workflow_dispatch:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock

      GIT_SHA: ${{ github.event.inputs.commit_sha }}
    steps:
      - uses: actions/checkout@v3
      - name: "SSH to server and deploy"
        run: ./infra/ssh-to-server
