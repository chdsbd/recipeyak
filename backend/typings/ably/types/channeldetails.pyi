from typing import Any

class ChannelDetails:
    def __init__(self, channel_id: str, status: ChannelStatus) -> None: ...
    @property
    def channel_id(self) -> str: ...
    @property
    def status(self) -> ChannelStatus: ...
    @staticmethod
    def from_dict(obj: dict[str, Any]) -> ChannelDetails: ...

class ChannelStatus:
    def __init__(self, is_active: bool, occupancy: ChannelOccupancy) -> None: ...
    @property
    def is_active(self) -> bool: ...
    @property
    def occupancy(self) -> ChannelOccupancy: ...
    @staticmethod
    def from_dict(obj: dict[str, Any]) -> ChannelStatus: ...

class ChannelOccupancy:
    def __init__(self, metrics: ChannelMetrics) -> None: ...
    @property
    def metrics(self) -> ChannelMetrics: ...
    @staticmethod
    def from_dict(obj: dict[str, Any]) -> ChannelOccupancy: ...

class ChannelMetrics:
    def __init__(
        self,
        connections: int,
        presence_connections: int,
        presence_members: int,
        presence_subscribers: int,
        publishers: int,
        subscribers: int,
    ) -> None: ...
    @property
    def connections(self) -> int: ...
    @property
    def presence_connections(self) -> int: ...
    @property
    def presence_members(self) -> int: ...
    @property
    def presence_subscribers(self) -> int: ...
    @property
    def publishers(self) -> int: ...
    @property
    def subscribers(self) -> int: ...
    @staticmethod
    def from_dict(obj: dict[str, Any]) -> ChannelMetrics: ...
