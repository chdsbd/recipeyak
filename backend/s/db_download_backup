#!/usr/bin/env python
import subprocess
import tempfile
from pathlib import Path


def main() -> None:
    res = subprocess.run(
        ("aws", "s3", "ls", "s3://recipeyak-backups/"), check=True, capture_output=True
    )
    # breakpoint()
    latest = next(reversed([x for x in res.stdout.decode().split("\n") if x]), None)
    if not latest:
        print("could not find backup")  # noqa: T001
        exit(1)

    backup_name = latest.split(" ")[-1]
    backup_date = backup_name.split("T")[0]
    database_name = f"recipeyak_{backup_date}"

    database_exists = subprocess.run(
        (
            "psql",
            "-U",
            "postgres",
            "-c",
            f"select count(*) from pg_database where datname = '{database_name}'",
            "--quiet",
            "--tuples-only",
        ),
        check=True,
        capture_output=True,
    )

    database_count = int(database_exists.stdout.strip())
    if database_count > 0:
        subprocess.run(("dropdb", "-i", "-U", "postgres", database_name), check=True)
    subprocess.run(("createdb", "-U", "postgres", database_name), check=True)

    with tempfile.TemporaryDirectory() as download_directory:
        subprocess.run(
            (
                "aws",
                "s3",
                "cp",
                "--quiet",
                f"s3://recipeyak-backups/{backup_name}",
                download_directory,
            ),
            check=True,
        )
        backup_path = Path(download_directory) / backup_name
        subprocess.run(
            (
                "gunzip",
                str(backup_path),
            ),
            check=True,
        )
        subprocess.run(
            (
                "psql",
                "-U",
                "postgres",
                "--quiet",
                "-d",
                database_name,
                "-f",
                str((backup_path).with_suffix("")),
            ),
            check=True,
            capture_output=True,
        )
    print(f"Database created: {database_name}")  # noqa: T001


if __name__ == "__main__":
    main()
