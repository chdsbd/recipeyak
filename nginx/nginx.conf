# don't send nginx version in headers or error pages
server_tokens off;

# https://gist.github.com/simonw/1e0fdf2e9b8744b39bd7
# https://nginx.org/en/docs/http/ngx_http_log_module.html#log_format
log_format logfmt 'time_local="$time_local" '
    'remote_addr="$remote_addr" '
    'request="$request" '
    'status=$status '
    'body_bytes_sent=$body_bytes_sent '
    'request_time=$request_time '
    'upstream_response_time=$upstream_response_time '
    'request_id=$request_id '
    'forwarded_for="$http_x_forwarded_for" '
    'forwarded_proto="$http_x_forwarded_proto" '
    'http_referer="$http_referer" '
    'http_user_agent="$http_user_agent"';

# https://stackoverflow.com/a/42564710/3555105
log_format json_combined escape=json '{ "time_local": "$time_local", '
     '"remote_addr": "$remote_addr", '
     '"request": "$request", '
     '"status": "$status", '
     '"body_bytes_sent": "$body_bytes_sent", '
     '"request_time": "$request_time", '
     '"upstream_response_time": "$upstream_response_time", '
     '"request_id": "$request_id", '
     '"forwarded_for": "$http_x_forwarded_for", '
     '"forwarded_proto": "$http_x_forwarded_proto", '
     '"http_referrer": "$http_referer", '
     '"http_user_agent": "$http_user_agent" }';

# https://stackoverflow.com/a/42802777/3555105
# Only allow access via hostnames
server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;
    server_name "";
    return 444;
}

server {
  # http://nginx.org/en/docs/http/converting_rewrite_rules.html
  # redirect www. to non-www.
  server_name www.recipeyak.com;
  return 301 $scheme://recipeyak.com$request_uri;
}

# https://docs.sentry.io/ip-ranges/
# Allow only sentry to fetch source maps
geo $http_x_forwarded_for $allow_source_map {
     35.184.238.160/32 1;
     104.155.159.182/32 1;
     104.155.149.19/32 1;
     130.211.230.102/32 1;
     default 0;
}

server {
    # Directory of where we store the index.html
    root /var/www;

    server_name recipeyak.com;

    access_log /var/log/nginx/access.log json_combined;
    error_log /var/log/nginx/error.log;

    # https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip
    gzip on;
    gzip_comp_level 5;

    # https://github.com/h5bp/server-configs-nginx/blob/master/nginx.conf#L103
    # Don't compress anything that's already small and unlikely to shrink much
    # if at all (the default is 20 bytes, which is bad as that usually leads to
    # larger files after gzipping).
    # Default: 20
    gzip_min_length 256;

    # we don't compress media that already has compression built into the format
    gzip_types
        text/html
        text/css
        text/xml
        text/plain
        image/svg+xml
        image/tiff
        application/javascript
        application/atom+xml
        application/rss+xml
        application/font-woff
        application/json
        application/xhtml+xml;

    # https://stackoverflow.com/a/33448739/3555105
    # http://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_proxied
    gzip_proxied any;
    gzip_vary on;

    add_header X-Response-Id $request_id;
    add_header X-Request-Time $request_time;
    # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#Directives
    # https://sentry.io/magnus-montis/recipeyak/settings/csp/
    add_header Content-Security-Policy "default-src 'self' https://sentry.io; img-src *; style-src 'self' 'unsafe-inline'; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; report-uri https://sentry.io/api/250295/csp-report/?sentry_key=3b11e5eed068478390e1e8f01e2190a9";
    # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
    add_header X-Content-Type-Options "nosniff";
    # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
    add_header X-Frame-Options "SAMEORIGIN";
    # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
    add_header X-XSS-Protection "1; mode=block";
    # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

    location / {
        if (-f /var/www/maintenance_on) {
            return 503;
        }
        root /var/app/dist;
        # First attempt to serve request as file, then serve our index.html
        try_files $uri /index.html;
    }

    location ~ ^/static/(.+)\.map$ {
        alias /var/app/dist/;

        if ($allow_source_map = 0) {
            return 403;
        }

        try_files $uri =404;
    }

    location /static/ {
        # http://stackoverflow.com/a/10647080/3555105
        alias /var/app/;
        # Set maximum expiration time. By default, it's off.
        expires max;
        try_files django/$uri dist/$uri =404;
    }

    # http://nginx.org/en/docs/http/ngx_http_core_module.html#location
    # case-insensitive regex match
    location ~* ^/(api|rest-auth|admin|api-auth) {
        if (-f /var/www/maintenance_on) {
            return 503;
        }
        proxy_pass http://django:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Request-Id $request_id;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Upstream-Response-Time $upstream_header_time;
    }

    error_page 503 @maintenance;
    location @maintenance {
        rewrite ^(.*)$ /maintenance.html break;
    }

    error_page 404 @404;
    location @404 {
        rewrite ^(.*)$ /404.html break;
    }

    error_page 500 502 504 @50x;
    location @50x {
        rewrite ^(.*)$ /50x.html break;
    }
}
