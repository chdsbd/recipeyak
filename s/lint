#!/usr/bin/env bash
set -e

# TODO(chdsbd): Combine with frontend lints via proper CLI

cd $(dirname $(dirname "$0"))

if [[ -f .env ]]; then
    # export all variables from env file
    set -a
    source .env
    set +a
fi

echo 'start mypy'
./s/typecheck &

echo 'start flake8'
(poetry run flake8 .) &

echo 'start black'
# black --quiet is too quiet, so we grep for 'would format' in stderr
(poetry run black --check . 2> >( grep 'would reformat');) &

if [[ "$@" == *'--db'* ]] || [[ $CI ]]; then
    echo 'check for missing migrations'
    poetry run yak missing-migrations &
else
    echo '--db not passed. Skipping migration check that requires Postgres.'
fi

if [[ $CI ]]; then
  echo 'start pylint'
  PYTHON_DIRS=$(find backend -name "__init__.py" | grep -E -v '\.venv|node_modules' | awk -F '/' '{print "backend/"$2 }' | uniq | xargs)
  poetry run pylint --rcfile='.pylintrc' $PYTHON_DIRS &
fi

echo 'wait for background jobs to execute'
FAIL=0
for job in $(jobs -p)
do
    wait $job || FAIL=1
    echo 'job finished'
done

if [[ $FAIL -gt 0 ]]; then
    echo 'ðŸš¨  Failure'
else
    echo 'âœ…  Success'
fi

exit $FAIL
